# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          houdini_src_folder=$(pwd)
          cat << 'EOF' > $houdini_src_folder/.git/hooks/commit-msg
          #!/bin/sh

          LOGMSG=$1


          # Admin pass

          if (cat $LOGMSG | grep "ADMIN" > /dev/null); then
              echo "Admin operation" 1>&2
              exit 0
          fi

          if (cat $LOGMSG | grep -iEq  '(^\[VALIDATION\])' > /dev/null); then
              echo "Houdini test CI" 1>&2
              exit 0
          fi

          RED='\033[0;31m'
          NC='\033[0m' # No Color

          if [ $(cat "$LOGMSG" | grep -iEq 'Jira: *[0-9]* *' > /dev/null; echo $?) -ne 0 ] && [ $(cat $LOGMSG | grep -E "IssueID:[0-9]*" > /dev/null; echo $?) -ne 0 ]; then
              echo -e "${RED}[POLICY] Your message is not formatted correctly!${NC}" 1>&2
              echo "*****************************************************************" 1>&2
              echo "Can't find \"JIRA: XXXX\" or \"IssueID:****\" from App Test Web" 1>&2
              echo "Please fill the jira or IssueID, and make sure follow the right format" 1>&2
              echo "If the jira number is more than 1, please seperate them with \",\", and put them in one line." 1>&2
              echo "*****************************************************************" 1>&2
              exit 1
          fi

          if !(cat $LOGMSG | grep "Checkin classification:" > /dev/null); then
              echo -e "${RED}[POLICY] Your message is not formatted correctly!${NC}" 1>&2
              echo "*****************************************************************" 1>&2
              echo "Please input Checkin classification in CI log" 1>&2
              echo "If CI for new feature, please input 'Checkin classification:new feature' " 1>&2
              echo "If CI for bug fix, please input 'Checkin classification:bug fix' " 1>&2
              echo "If CI for regression fix, please input 'Checkin classification:regression fix' " 1>&2
              echo "*****************************************************************" 1>&2
              exit 1
          fi

          if !(cat $LOGMSG | grep "Test result:" > /dev/null); then
              echo -e "${RED}[POLICY] Your message is not formatted correctly!${NC}" 1>&2
              echo "*****************************************************************" 1>&2
              echo "Please input \"Test result: \<Pre-ci Test Link\>\" in commit msg!" 1>&2
              echo "*****************************************************************" 1>&2
              exit 1
          fi

          echo 0

          EOF

